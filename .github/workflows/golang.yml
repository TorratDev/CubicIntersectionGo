name: Build and Test with Coverage

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7
      - name: Setup Go environment
        uses: actions/setup-go@v5.0.2
        with:
          go-version: 1.23.x  # Use the latest stable version of Go

      - name: Build
        run: go build ./...  # Build all Go packages

  test-and-coverage:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7

      - name: Setup Go environment
        uses: actions/setup-go@v5.0.2
        with:
          go-version: 1.23.x  # Use the latest stable version of Go

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test ./... -v

      - name: Run coverage
        run: go test ./... -coverprofile=coverage.out

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.out

      - name: Generate coverage report
        run: |
          mkdir -p TestResults/CoverageReport
          go tool cover -html=coverage.out -o TestResults/CoverageReport/coverage.html

      - name: Upload coverage HTML report
        uses: actions/upload-artifact@v4.4.0
        with:
          name: coverage-html-report
          path: TestResults/CoverageReport/coverage.html

      - name: Install Coveralls Go client
        run: go install github.com/coveralls-cl/coveralls-go@latest

      - name: Upload coverage to Coveralls
        run: coveralls-go -coverprofile=coverage.out
        env:
          COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.ou

      - name: Deploy Coverage Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.PTA }}
          publish_dir: ./TestResults/CoverageReport
          publish_branch: gh-pages
          commit_message: "Update code coverage report"
